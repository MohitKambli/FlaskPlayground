import {useState, useEffect} from 'react'

function Todo() {
    const [todos, setTodos] = useState([]);
    const [newTodo, setNewTodo] = useState('');
    const [editingTodoId, setEditingTodoId] = useState(null);
    const [editedDescription, setEditedDescription] = useState('');

    const baseUrl = 'http://127.0.0.1:5000/todos';
    async function fetchTodos() {
        try {
            const response = await fetch(baseUrl, {
                method: 'GET',
                headers: { "Content-Type": "application/json" }
            });
            if(response.ok) {
                const data = await response.json();
                setTodos(data);
                console.log(data);
            } else {
                console.log('Error while fetching todos');
            }
        } catch(e) {
            console.log('Error: ', e);
        }
    }
    useEffect(() => {
        fetchTodos();
    }, []);
    const addTodo = async () => {
        if(newTodo.trim() === '')
            return;
        try {
            const response = await fetch(`${baseUrl}/add`, {
                method: 'POST',
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({description: newTodo})
            })
            const data = await response.json();
            setTodos([...todos, data]);
            setNewTodo("");
        } catch(e) {
            console.log('Error: ', e);
        }
    }
    const deleteTodo = async (id) => {
        try {
            const response = await fetch(`${baseUrl}/delete/${id}`, {
                method: 'DELETE',
                headers: { "Content-Type": "application/json" }
            })
            setTodos(todos.filter((todo) => todo.tid !== id));
        } catch(e) {
            console.log('Error: ', e);
        }
    }
    const updateTodo = async (id) => {
        if(editedDescription.trim() === '')
            return;
        try {
            const response = await fetch(`${baseUrl}/update/${id}`, {
                method: 'PUT',
                headers: { "Content-Type": "application/json" },
                body: JSON.stringify({description: editedDescription})
            })
            const data = await response.json();
            setTodos(todos.map((todo) => (todo.tid === id ? data : todo)));
            setEditingTodoId(null);
            setEditedDescription('');
        } catch(e) {
            console.log('Error: ', e);
        }
    }

    return (
        <div>
            <h1>Todo-List</h1>
            <div>
                <input 
                    type='text' 
                    value={newTodo} 
                    placeholder='Enter a new todo' 
                    onChange={(e) => setNewTodo(e.target.value)}
                />
                <button onClick={addTodo}>
                    Add
                </button>
            </div>
            <ul>
                {
                    todos.map((todo) => (
                        <li key={todo.tid}>
                            {
                                editingTodoId === todo.tid ? (
                                    <div>
                                        <input 
                                            type="text"
                                            value={editedDescription}
                                            onChange={(e) => setEditedDescription(e.target.value)}
                                        />
                                        <button
                                            onClick={() => updateTodo(todo.tid)}
                                        >
                                            Save
                                        </button>
                                        <button
                                            onClick={() => setEditingTodoId(null)}
                                        >
                                            Cancel
                                        </button>
                                    </div>
                                ) : (
                                    <div>
                                        <span>{todo.description}</span>
                                        <button
                                            onClick={() => {
                                                setEditingTodoId(todo.tid);
                                                setEditedDescription(todo.description);
                                            }}
                                        >
                                            Edit
                                        </button>
                                        <button
                                            onClick={() => deleteTodo(todo.tid)}
                                        >
                                            Delete
                                        </button>
                                    </div>
                                )
                            }
                        </li>
                    ))
                }
            </ul>
        </div>
    );
}
export default Todo;
